package User;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class ManagerUserUI extends DataUser {
    User userI = new User();
    Encryption en = new Encryption();
    
    public void NewUser(UserUI uUi){
        
        userI.setIdCard( uUi.getFieldIdCard().getText().trim() );
        userI.setFirstName( uUi.getFieldFirstName().getText().toUpperCase().trim() );
        userI.setLastName( uUi.getFieldLastName().getText().toUpperCase().trim() );
        userI.setLastName2( uUi. getFieldLastName2().getText().toUpperCase().trim() );
        userI.setPhone1( uUi.getFieldPhone1().getText().trim() );
        userI.setPhone2( uUi.getFieldPhone2().getText().trim() );
        userI.setAddress( uUi.getTextAddress().getText().toUpperCase() );
        userI.setEmail( uUi.getFieldEmail().getText().toUpperCase().trim() );
        userI.setRole( uUi.getComboRole().getSelectedItem().toString() );
        userI.setUserName( uUi.getFieldFirstName().getText().substring(0, 1).toLowerCase().trim() 
                    + uUi.getFieldLastName().getText().toLowerCase().trim() );
        userI.setPassword( new String( uUi.getFieldPassword().getPassword() ).trim() );
        cifrada = en.Cifrado(contrasena, usuario);
        
        if(nombre.isEmpty() || apellido1.isEmpty() || cedula.isEmpty() || telefono1.isEmpty()
                || direccion.isEmpty() || correo.isEmpty() || rol.isEmpty() || contrasena.isEmpty() ){
            uUi.getLblMensajeAviso().setText("Complete todos los espacios.");
        }else{
            switch( EQ.uniqueID(cedula) ){
                case 0:
                    uUi.getLblMensajeAviso().setText("CÃ©dula Existente");
                    uUi.getFldCedula().setText(null);
                    break;
                case 1:
                    PQ.Insert(cedula, nombre, apellido1, apellido2, telefono1, telefono2, 
                                        direccion, correo, rol, usuario, cifrada);
                    JOptionPane.showMessageDialog(null,"Registrado con exito\nSu Nombre de Usuario es: " + usuario);
                    this.clearFields(uUi);
                    break;
            }
        }
    }

    public void validateNumbers(UserUI ui, JTextField j){
        
        j.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e){
                char c = e.getKeyChar();
                
                if( !Character.isDigit(c) ){
                    e.consume();
                    JOptionPane.showMessageDialog(null, "Only NUMBERS are permited in phone");
//                    ui.getFieldPhone1().setText(null);
//                    ui.getFieldPhone2().setText(null);
                }
            }
        });
        
    }

    public void clearFields(UserUI ui) {
        
        ui.getFieldIdCard().setText("");
        ui.getFieldFirstName().setText("");
        ui.getFieldLastName().setText("");
        ui.getFieldLastName2().setText("");
        ui.getFieldPhone1().setText("");
        ui.getFieldPhone2().setText("");
        ui.getTextAddress().setText("");
        ui.getFieldEmail().setText("");
        ui.getComboRole().setSelectedIndex(0);
        ui.getLblUsername().setText("Self-Generated By The System");
        ui.getFieldPassword().setText("");
        
    }
    
        
    
}
